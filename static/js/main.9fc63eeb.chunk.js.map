{"version":3,"sources":["../external \"Cesium\"","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Cesium","position","Cartesian3","fromDegrees","pointGraphics","pixelSize","dummyCredit","document","createElement","App","className","full","creditContainer","timeline","animation","fullscreenButton","sceneModePicker","baseLayerPicker","projectionPicker","navigationHelpButton","homeButton","geocoder","point","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2FAAAA,EAAOC,QAAUC,Q,0JCIXC,EAAWC,aAAWC,aAAa,WAAY,WAAY,KAC3DC,EAAgB,CAAEC,UAAW,IAE7BC,EAAcC,SAASC,cAAc,OAwB5BC,MAtBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,CACIC,MAAI,EACJC,gBAAiBN,EACjBO,UAAU,EACVC,WAAW,EACXC,kBAAkB,EAClBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,sBAAsB,EACtBC,YAAY,EACZC,UAAU,EAXd,SAaE,cAAC,IAAD,CAAQpB,SAAUA,EAAUqB,MAAOlB,SCb5BmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3B,SAAS4B,eAAe,SAM1BZ,M","file":"static/js/main.9fc63eeb.chunk.js","sourcesContent":["module.exports = Cesium;","import { Cartesian3 } from \"cesium\";\r\nimport { Viewer, Entity } from \"resium\";\r\nimport './App.css';\r\n\r\nconst position = Cartesian3.fromDegrees(-74.0707383, 40.7117244, 100);\r\nconst pointGraphics = { pixelSize: 10 };\r\n\r\nconst dummyCredit = document.createElement(\"div\");\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Viewer \r\n          full \r\n          creditContainer={dummyCredit} \r\n          timeline={false} \r\n          animation={false} \r\n          fullscreenButton={false} \r\n          sceneModePicker={false}\r\n          baseLayerPicker={true}\r\n          projectionPicker={false}\r\n          navigationHelpButton={false}\r\n          homeButton={false}\r\n          geocoder={false}\r\n      >\r\n        <Entity position={position} point={pointGraphics} />\r\n      </Viewer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}