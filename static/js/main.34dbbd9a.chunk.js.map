{"version":3,"sources":["../external \"Cesium\"","models/Cesium_Air.glb","components/plane/Plane.js","CesiumContext.js","components/nav/destinationCard/DestinationCard.js","components/nav/search/Search.js","components/nav/SideBar.js","components/globe/polygonCountries/PolygonCountries.js","images/marker.png","components/globe/Globe.js","images/otb.png","components/otbimage/OtbImage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Cesium","Plane","props","position","Cartesian3","fromDegrees","longitude","latitude","elevation","model","uri","planeModel","maximumScale","minimumPixelSize","state","viewer","setInstance","ref","CesiumContext","React","createContext","DestinationCard","Card","bg","text","onMouseEnter","handleCardClick","item","Img","variant","src","Body","Title","this","city","Text","country","id","Component","Search","value","handleChange","bind","search","event","setState","target","matches","length","cities","filter","entry","toLowerCase","includes","map","i","push","onSearch","Form","inline","onSubmit","FormControl","onChange","onKeyUp","type","placeholder","className","SideBar","flyTo","lat","lng","document","getElementById","style","width","Button","onClick","openNav","Nav","Item","handleMatchedCities","matchedCities","closeNav","PolygonCountries","randomColor","Color","countries","features","geometry","countryCoordinates","concat","apply","coordinates","name","description","properties","hierarchy","fromDegreesArray","fill","material","toString","polygon","j","polyCoords","useClickedItem","e","console","log","JSON","stringify","dummyCredit","createElement","Global","createRef","selected","flyToDestination","destination","current","cesiumElement","camera","context","top","left","right","bottom","creditContainer","timeline","animation","fullscreenButton","sceneModePicker","baseLayerPicker","projectionPicker","navigationHelpButton","homeButton","geocoder","infoBox","selectionIndicator","billboard","image","Marker","height","label","iso3","font","LabelStyle","FILL_AND_OUTLINE","outlineWidth","verticalOrigin","VerticalOrigin","BOTTOM","pixelOffset","Cartesian2","contextType","OtbImage","Image","logo","App","Provider","Globe","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.34dbbd9a.chunk.js","sourcesContent":["module.exports = Cesium;","export default __webpack_public_path__ + \"static/media/Cesium_Air.9a126575.glb\";","import { Cartesian3 } from \"cesium\";\nimport { Entity } from \"resium\";\nimport planeModel from \"../../models/Cesium_Air.glb\"\n\n\nfunction Plane(props) {\n  return (\n    <Entity\n      position={Cartesian3.fromDegrees(\n        props.longitude,\n        props.latitude,\n        props.elevation\n      )}\n      model={{\n        uri: planeModel,\n        maximumScale: 10000,\n        minimumPixelSize: 256,\n      }}\n      // tracked\n    />\n  );\n}\n\nexport default Plane;\n","import React from \"react\";\nconst CesiumContext = React.createContext();\nexport const state = {\n  viewer: \"\",\n  setInstance: (ref) => {\n    state.viewer = ref;\n  }\n};\nexport default CesiumContext;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport \"./DestinationCard.css\";\n\nclass DestinationCard extends React.Component {\n  render() {\n    return (\n      <Card\n        key={this.props.item.id}\n        bg=\"light\"\n        text=\"black\"\n        onMouseEnter={() => {\n          this.props.handleCardClick(this.props.item);\n        }}\n      >\n        <Card.Img variant=\"top\" src=\"https://picsum.photos/200/100\" />\n        <Card.Body>\n          <Card.Title>{this.props.item.city}</Card.Title>\n          <Card.Text>{this.props.item.country}</Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default DestinationCard;\n","import React from \"react\";\nimport { Form, FormControl } from \"react-bootstrap\";\n//import cities from \"../../../data/worldcities.json\";\nimport cities from \"../../../data/capitalcities.json\";\nimport \"./Search.css\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  search() {\n    var matches = [];\n    if (this.state.value.length > 2) {\n      cities\n        .filter(\n          (entry) =>\n            entry.city.toLowerCase().includes(this.state.value.toLowerCase()) ||\n            entry.country.toLowerCase().includes(this.state.value.toLowerCase())\n        )\n        .map((country, i) => {\n          return matches.push(country);\n        });\n    }\n    this.props.onSearch(matches);\n  }\n\n  render() {\n    return (\n      <Form inline onSubmit={null}>\n        <FormControl\n          value={this.state.value}\n          onChange={this.handleChange}\n          onKeyUp={this.search}\n          type=\"text\"\n          placeholder=\"Search...\"\n          className=\"mr-sm-2\"\n        />\n        {/* <Button variant=\"outline-success\">Search</Button> */}\n      </Form>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport { Nav, Button } from \"react-bootstrap\";\nimport DestinationCard from \"./destinationCard/DestinationCard\";\nimport Search from \"./search/Search\";\n\nimport \"./SideBar.css\";\n\nclass SideBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCardClick = this.handleCardClick.bind(this);\n  }\n\n  handleCardClick(item) {\n    this.props.flyTo({ latitude: item.lat, longitude: item.lng });\n  }\n\n  openNav() {\n    document.getElementById(\"nav\").style.width = \"20vw\";\n  }\n\n  closeNav() {\n    document.getElementById(\"nav\").style.width = \"0\";\n  }\n\n  render() {\n    return (\n      <>\n        <Button\n          className=\"openbtn\"\n          variant=\"dark\"\n          onClick={() => {\n            this.openNav();\n          }}\n        >\n          ☰\n        </Button>\n        <Nav\n          id=\"nav\"\n          className=\"col-md-12 d-none d-md-block bg-dark sidebar\"\n        >\n          <Nav.Item>\n            <Search onSearch={this.props.handleMatchedCities} />\n          </Nav.Item>\n\n          {this.props.matchedCities.map((item) => {\n            return (\n              <Nav.Item>\n                <DestinationCard\n                  key={item.id}\n                  item={item}\n                  handleCardClick={this.handleCardClick}\n                />\n              </Nav.Item>\n            );\n          })}\n          <Button\n            variant=\"dark\"\n            className=\"closebtn\"\n            onClick={() => {\n              this.closeNav();\n            }}\n          >\n            &times;\n          </Button>\n        </Nav>\n      </>\n    );\n  }\n}\n\nexport default SideBar;\n","import React from \"react\";\nimport { Cartesian3, Color } from \"cesium\";\nimport { Entity, PolygonGraphics } from \"resium\";\nimport countries from \"../../../data/countries.geo.json\";\n\nclass PolygonCountries extends React.Component {\n  constructor(props) {\n    super(props);\n    this.randomColor = this.randomColor.bind(this);\n  }\n\n  randomColor() {\n    //return new Color(Math.random(), Math.random(), Math.random(), 0.5);\n    return new Color(1.0, 1.0, 0.0, 0);\n  }\n  render() {\n    return (\n      <>\n        {countries.features.map((country, i) => {\n          if (country.geometry.type === \"Polygon\") {\n            var countryCoordinates = [].concat.apply(\n              [],\n              country.geometry.coordinates[0]\n            );\n            return (\n              <Entity\n                key={\"E\" + country.id + i.toString()}\n                name={country.id}\n                description={country.properties.name}\n              >\n                <PolygonGraphics\n                  key={country.id + i.toString()}\n                  hierarchy={Cartesian3.fromDegreesArray(countryCoordinates)}\n                  fill={true}\n                  material={this.randomColor()}\n                />\n              </Entity>\n            );\n          } else {\n            return country.geometry.coordinates.map((polygon, j) => {\n              var polyCoords = [].concat.apply([], polygon[0]);\n              return (\n                <Entity\n                  key={\"E\" + country.id + i.toString() + \"-\" + j.toString()}\n                  name={country.id}\n                  description={country.properties.name}\n                >\n                  <PolygonGraphics\n                    key={country.id + i.toString() + \"-\" + j.toString()}\n                    hierarchy={Cartesian3.fromDegreesArray(polyCoords)}\n                    fill={true}\n                    material={this.randomColor()}\n                  />\n                </Entity>\n              );\n            });\n          }\n        })}\n      </>\n    );\n  }\n}\n\nexport default PolygonCountries;\n","export default __webpack_public_path__ + \"static/media/marker.87dd02dd.png\";","import React, { createRef } from \"react\";\nimport {\n  Cartesian3,\n  LabelStyle,\n  Cartesian2,\n  VerticalOrigin,\n} from \"cesium\";\nimport { Viewer, Entity } from \"resium\";\nimport Plane from \"../plane/Plane\";\nimport CesiumContext from \"../../CesiumContext\";\nimport SideBar from \"../nav/SideBar\";\nimport PolygonCountries from \"./polygonCountries/PolygonCountries\";\nimport Marker from \"../../images/marker.png\";\n\nfunction useClickedItem(e) {\n  console.log(\"E \" + JSON.stringify(e));\n}\nconst dummyCredit = document.createElement(\"div\");\n\n\nclass Global extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = createRef();\n    this.selected = [];\n    this.selected[\"GBR\"] = false;\n    this.state = {\n      matchedCities: [],\n    };\n\n    this.handleMatchedCities = this.handleMatchedCities.bind(this);\n    this.flyToDestination = this.flyToDestination.bind(this);\n  }\n\n  handleMatchedCities(matches) {\n    this.setState({ matchedCities: matches });\n  }\n\n  flyToDestination(destination) {\n    this.ref.current.cesiumElement.camera.flyTo({\n      destination: Cartesian3.fromDegrees(\n        destination.longitude,\n        destination.latitude,\n        5000000\n      ),\n    });\n  }\n\n  componentDidMount() {\n    if (this.ref.current && this.ref.current.cesiumElement) {\n      this.context.setInstance(this.ref.current.cesiumElement);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <SideBar\n          {...this.state}\n          flyTo={this.flyToDestination}\n          handleMatchedCities={this.handleMatchedCities}\n        />\n        <Viewer\n          ref={this.ref}\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n          }}\n          creditContainer={dummyCredit}\n          timeline={false}\n          animation={false}\n          fullscreenButton={false}\n          sceneModePicker={false}\n          baseLayerPicker={true}\n          projectionPicker={false}\n          navigationHelpButton={false}\n          homeButton={false}\n          geocoder={false}\n          infoBox={true}\n          selectionIndicator={false}\n          onClick={useClickedItem}\n        >\n          <PolygonCountries />\n\n          {this.state.matchedCities.map((entry, i) => {\n            return (\n              <Entity\n                name={entry.city}\n                billboard={{\n                  image: Marker,\n                  width: 24,\n                  height: 36,\n                }}\n                label={{\n                  text: `${entry.city}, ${entry.iso3}`,\n                  font: \"36pt\",\n                  style: LabelStyle.FILL_AND_OUTLINE,\n                  outlineWidth: 3,\n                  verticalOrigin: VerticalOrigin.BOTTOM,\n                  pixelOffset: new Cartesian2(0, -20),\n                }}\n                position={Cartesian3.fromDegrees(entry.lng, entry.lat, 100)}\n              ></Entity>\n            );\n          })}\n\n          <Plane\n            longitude={-0.124625}\n            latitude={51.510357}\n            elevation={100000}\n          />\n        </Viewer>\n      </>\n    );\n  }\n}\nGlobal.contextType = CesiumContext;\nexport default Global;\n","export default __webpack_public_path__ + \"static/media/otb.c5562c17.png\";","import React from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport \"./OtbImage.css\";\nimport logo from \"../../images/otb.png\"\n\nfunction OtbImage() {\n  return <Image src={logo} id={\"otbImage\"} />;\n}\n\nexport default OtbImage;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Globe from \"./components/globe/Globe.js\";\nimport OtbImage from \"./components/otbimage/OtbImage\";\nimport CesiumContext, { state } from \"./CesiumContext\";\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <CesiumContext.Provider value={state}>\n        <Globe />\n        <OtbImage />\n      </CesiumContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}