{"version":3,"sources":["../external \"Cesium\"","useInputEvent.js","components/info-carousel/InfoCarousel.js","components/info/Info.js","models/Monster.glb","components/plane/Plane.js","CesiumContext.js","components/nav/destinationCard/DestinationCard.js","components/nav/search/Search.js","components/nav/SideBar.js","components/globe/polygonCountries/PolygonCountries.js","images/marker.png","images/otbMarker.png","images/greenMarker.png","images/blueMarker.png","images/YouAreHere.png","components/globe/Globe.js","images/otb.png","components/otbimage/OtbImage.js","useKonamiCode.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Cesium","useInputEvent","useState","key","setKey","useEffect","keyDownHandler","code","keyUpHandler","global","addEventListener","removeEventListener","InfoCarousel","title","image","description","rating","weather","currency","languages","Carousel","interval","indicators","Item","Caption","href","target","rel","Button","className","src","alt","Array","map","s","i","class","WeatherWidget","season","name","celsius","InfoWidget","atHomeCurrency","filter","c","atHome","otherCurrencies","prepend","icon","amount","l","DealsWidget","style","display","color","Card","width","marginLeft","marginRight","Body","Title","Subtitle","Text","Link","Info","x","y","item","destination","CapitalCitiesInfo","find","id","Math","floor","random","infoBorderColour","type","infoColour","top","left","backgroundColor","borderColor","Plane","props","position","Cartesian3","fromDegrees","longitude","latitude","elevation","hpr","HeadingPitchRoll","orientation","Transforms","headingPitchRollQuaternion","model","uri","planeModel","maximumScale","minimumPixelSize","runAnimations","clampAnimations","state","viewer","setInstance","ref","CesiumContext","React","createContext","DestinationCard","backgroundColour","this","textColour","bg","text","onMouseEnter","handleMouseEnter","Header","Img","variant","iso2","bsPrefix","ImgOverlay","Component","Search","value","handleChange","bind","search","event","setState","matchedCities","matchedCountries","matchedBeaches","length","cities","city","toLowerCase","includes","forEach","searchResult","entry","country","iso3","location","lat","lng","push","landmarks","landmark","countries","features","properties","countryMap","beaches","beach","some","onSearch","Form","inline","onSubmit","FormControl","onChange","onKeyUp","placeholder","SideBar","setSelectedItem","onClearPopup","flyTo","document","getElementById","onClick","openNav","Nav","handleMatchedCities","closeNav","index","handleCardClick","PolygonCountries","randomColor","Color","geometry","countryCoordinates","concat","apply","coordinates","hierarchy","fromDegreesArray","fill","material","toString","polygon","j","polyCoords","dummyCredit","createElement","Global","defaultPopUp","screenCoords","getScreenCentre","onEntityClick","current","cesiumElement","container","clientWidth","clientHeight","cardPosition","selectedItem","konamiCodeActivated","konami","isPopoverOpen","createRef","infoRef","selected","userLat","userLng","monsterLat","monsterLng","handleUserLocation","flyToDestination","matches","altitude","camera","complete","context","clock","onTick","prevState","self","navigator","geolocation","getCurrentPosition","coords","right","bottom","full","creditContainer","timeline","shouldAnimate","animation","fullscreenButton","sceneModePicker","baseLayerPicker","projectionPicker","navigationHelpButton","homeButton","geocoder","infoBox","selectionIndicator","onMouseDown","BlueMarker","GreenMarker","YellowMarker","OTBMarker","height","e","billboard","label","font","LabelStyle","FILL_AND_OUTLINE","outlineWidth","verticalOrigin","VerticalOrigin","BOTTOM","pixelOffset","Cartesian2","Arrow","contextType","OtbImage","Image","logo","konamiCode","App","count","setCount","success","setSuccess","useKonamiCode","Provider","Globe","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.99a89fdb.chunk.js","sourcesContent":["module.exports = Cesium;","\nimport { useEffect, useState } from \"react\";\nexport const useInputEvent = () => {\n  const [key, setKey] = useState(null);\n  useEffect(() => {\n    const keyDownHandler = ({ code }) => setKey(code);\n    const keyUpHandler = () => setKey(null);\n    global.addEventListener('keydown', keyDownHandler);\n    global.addEventListener('keyup', keyUpHandler);\n    return () => {\n      global.removeEventListener(\"keydown\", keyDownHandler);\n      global.removeEventListener(\"keyup\", keyUpHandler)\n    }\n  }, []);\n  return key;\n}\n//https://gist.github.com/joelnet/6bb17b8b49980a48a390578a9294d26f#file-useinputevent-js","import React from \"react\";\nimport { Carousel, Button, Card } from \"react-bootstrap\";\nimport \"./InfoCarousel.css\";\n\nexport const InfoCarousel = ({ title, image, description, rating, weather, currency, languages }) => (\n    <Carousel interval={null} indicators>\n        <Carousel.Item>\n            <Carousel.Caption>\n                <h1>{title}</h1>\n                <a href=\"https://onthebeach.co.uk\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <Button>Search this Destination</Button>\n                </a>\n            </Carousel.Caption>\n\n            <img\n                className=\"d-block\"\n                src={image}\n                alt={title}\n            />\n        </Carousel.Item>\n\n        <Carousel.Item>\n            <Carousel.Caption>\n                <h1>{title}</h1>\n                <div className=\"rating-container\">\n                    {\n                        [...Array(rating)].map((s, i) => (\n                            <span key={i}>⭐</span>\n                        ))\n                    }\n                </div>\n\n                <div class=\"description\">{description}</div>\n            </Carousel.Caption>\n\n            <div\n                className=\"opacity-container\"\n            />\n\n            <img\n                className=\"d-block\"\n                src={image}\n                alt={title}\n            />\n        </Carousel.Item>\n\n        <Carousel.Item>\n            <WeatherWidget title={title} weather={weather} />\n\n            <div\n                className=\"opacity-container\"\n            />\n\n            <img\n                className=\"d-block\"\n                src={image}\n                alt={title}\n            />\n        </Carousel.Item>\n\n        <Carousel.Item>\n            <InfoWidget title={title} currency={currency} languages={languages} />\n\n            <div\n                className=\"opacity-container\"\n            />\n\n            <img\n                className=\"d-block\"\n                src={image}\n                alt={title}\n            />\n        </Carousel.Item>\n\n        <Carousel.Item>\n            <DealsWidget title={title} />\n\n            <div\n                className=\"opacity-container\"\n            />\n\n            <img\n                className=\"d-block\"\n                src={image}\n                alt={title}\n            />\n        </Carousel.Item>\n    </Carousel>\n);\n\n\nconst WeatherWidget = ({ title, weather }) => {\n    const getWeatherIcon = (season) => {\n        if (season === \"Winter\") return (<i class=\"fas fa-snowflake\"></i>);\n        if (season === \"Summer\") return (<i class=\"fas fa-sun\"></i>);\n        if (season === \"Autumn\") return (<i class=\"fas fa-cloud-sun-rain\"></i>)\n        return (<i class=\"fas fa-cloud-sun\"></i>);\n    }\n\n    return (\n        <Carousel.Caption>\n            <h1>☁️ {title} ☁️</h1>\n            <div className=\"weather-container\">\n                {\n                    weather.map(({ name, celsius }) => (\n                        <div className=\"weather-item\">\n                            <h3>{name}</h3>\n                            {\n                                getWeatherIcon(name)\n                            }\n                            <h4>{`${celsius}'C`}</h4>\n                        </div>\n                    ))\n                }\n            </div>\n\n            <div className=\"weather-container\">\n                        <div className=\"weather-item\">\n                            <h4>From MAN: </h4>\n                            <i className=\"fas fa-plane\" />\n                            <h5>02:45hrs</h5>\n                        </div>\n                        <div className=\"weather-item\">\n                            <h4>From LPL: </h4>\n                            <i className=\"fas fa-plane\" />\n                            <h5>02:57hrs</h5>\n                        </div>\n                        <div className=\"weather-item\">\n                            <h4>From BHX: </h4>\n                            <i className=\"fas fa-plane\" />\n                            <h5>02:32hrs</h5>\n                        </div>\n            </div>\n        </Carousel.Caption>\n    )\n}\n\nconst InfoWidget = ({ title, currency, languages }) => {\n    const atHomeCurrency = currency.filter(c => c.atHome === true);\n    const otherCurrencies = currency.filter(c => c.atHome === false);\n\n    return (\n        <Carousel.Caption>\n            <>\n            <h1>💵 {title} 💵</h1>\n            <div class=\"currency-container\">\n                <h4>Your Local Currency:</h4>\n                {\n                    atHomeCurrency.map((c) => (\n                        <div className=\"currency-item-athome\">\n                            { c.prepend &&\n                                <h4>{`${c.icon}${c.amount}`}</h4>\n                            }\n\n                            { !c.prepend &&\n                                <h4>{`${c.icon}${c.amount}`}</h4>\n                            }\n                        </div>\n                    ))\n                }\n\n                <h4>Your Destination Currency Rate:</h4>\n                {\n                    otherCurrencies.map((c) => (\n                        <div className=\"currency-item\">\n                            { c.prepend &&\n                                <h4>{`${c.icon}${c.amount}`}</h4>\n                            }\n\n                            { !c.prepend &&\n                                <h4>{`${c.icon}${c.amount}`}</h4>\n                            }\n                        </div>\n                    ))\n                }\n            </div>\n\n            <div class=\"language-container\">\n                <h4>Your Destination Languages:</h4>\n                {\n                    languages.map((l, i) => (\n                        <h4>\n                            {i > 0 && \", \"}\n                            {`${l}`}\n                        </h4>\n                    ))\n                }\n            </div>\n            </>\n        </Carousel.Caption>\n    )\n}\n\nconst DealsWidget = ({ title }) => {\n    return (\n        <Carousel.Caption>\n            <h1>🔥 Holiday Deals! 🔥</h1>\n\n            <br/>\n            <div style={{ display: 'flex', color: 'black'}}>\n                <Card style={{ width: '10rem', marginLeft: '5px', marginRight: '5px' }}>\n                    <Card.Body>\n                        <Card.Title>Basic</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">£99pp</Card.Subtitle>\n                        <Card.Text className=\"text-muted\">\n                            Two star hotel for 4 nights!\n                        </Card.Text>\n                        <Card.Link href=\"#\">BUY NOW</Card.Link>\n                    </Card.Body>\n                </Card>\n\n                <Card style={{ width: '10rem', marginLeft: '5px', marginRight: '5px' }}>\n                    <Card.Body>\n                        <Card.Title>Premium</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">£149pp</Card.Subtitle>\n                        <Card.Text className=\"text-muted\">\n                            Three star hotel for 4 nights!\n                        </Card.Text>\n                        <Card.Link href=\"#\">BUY NOW</Card.Link>\n                    </Card.Body>\n                </Card>\n                \n                <Card style={{ width: '10rem', marginLeft: '5px', marginRight: '5px' }}>\n                    <Card.Body>\n                        <Card.Title>All-Star</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">£259pp</Card.Subtitle>\n                        <Card.Text className=\"text-muted\">\n                            Five star hotel for 4 nights!\n                        </Card.Text>\n                        <Card.Link href=\"#\">BUY NOW</Card.Link>\n                    </Card.Body>\n                </Card>\n            </div>\n        </Carousel.Caption>\n    )\n}\n\nexport default InfoCarousel;","import React from \"react\";\nimport { InfoCarousel } from \"../info-carousel/InfoCarousel\";\nimport CapitalCitiesInfo from \"../../data/capitalcitiesinfo.json\";\nimport \"./Info.css\";\n\nexport const Info = ({ x, y, item }) => {\n  let destination = CapitalCitiesInfo.find((x) => x.id === item.id);\n  if (!destination) {\n    destination = {\n      title: item.name,\n      image: item.image,\n      description: \"Unfortunately, we have no data yet!\",\n      rating: Math.floor(Math.random() * 5),\n      weather: [],\n      currency: [],\n      languages: [],\n    };\n  }\n\n  const infoBorderColour =\n    item.type === \"City\"\n      ? \"#0275d8\"\n      : item.type === \"Country\"\n      ? \"#5cb85c\"\n      : item.type === \"Landmark\"\n      ? \"#5bc0de\"\n      : \"#f0ad4e\";\n\n      const infoColour =\n    item.type === \"City\"\n      ? \"#0275d8\"\n      : item.type === \"Country\"\n      ? \"#5cb85c\"\n      : item.type === \"Landmark\"\n      ? \"#5bc0de\"\n      : \"#fedd01\";\n\n  return (\n    <div\n      className=\"infoContainer\"\n      style={{ top: `${y}px`, left: `${x}px`, backgroundColor: infoColour, borderColor: infoBorderColour }}\n    >\n      <div className=\"infoCarouselContainer\">\n        <InfoCarousel {...destination} />\n      </div>\n    </div>\n  );\n};\nexport default Info;\n","export default __webpack_public_path__ + \"static/media/Monster.d0694573.glb\";","import { Cartesian3, HeadingPitchRoll, Transforms } from \"cesium\";\nimport { Entity } from \"resium\";\nimport planeModel from \"../../models/Monster.glb\";\n\nfunction Plane(props) {\n  \n  var position = Cartesian3.fromDegrees(\n    props.longitude,\n    props.latitude,\n    props.elevation\n  );\n  var hpr = new HeadingPitchRoll(0, 0, 0);\n  var orientation = Transforms.headingPitchRollQuaternion(position, hpr);\n  return (\n    <Entity\n      position={position}\n      orientation={orientation}\n\n      model={{\n        uri: planeModel,\n        maximumScale: 10000,\n        minimumPixelSize: 128,\n        runAnimations: true,\n        clampAnimations: true\n      }}\n      \n    />\n  );\n}\n\nexport default Plane;\n","import React from \"react\";\nconst CesiumContext = React.createContext();\nexport const state = {\n  viewer: \"\",\n  setInstance: (ref) => {\n    state.viewer = ref;\n  }\n};\nexport default CesiumContext;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport \"./DestinationCard.css\";\n\nclass DestinationCard extends React.Component {\n  render() {\n    const backgroundColour =\n      this.props.item.type === \"City\"\n        ? \"primary\"\n        : this.props.item.type === \"Country\"\n        ? \"success\"\n        : this.props.item.type === \"Landmark\"\n        ? \"info\"\n        : \"warning\";\n\n    const textColour =\n      this.props.item.type === \"Landmark\" || this.props.item.type === \"Beach\"\n        ? \"black\"\n        : \"white\";\n\n    return (\n      <>\n        <Card\n          className=\"text-center grow\"\n          key={this.props.item.id}\n          bg={backgroundColour}\n          text={textColour}\n          onMouseEnter={() => {\n            this.props.handleMouseEnter(this.props.item);\n          }}\n        >\n          <Card.Header>\n            {this.props.item.type}{\" \"}\n            {/* Curtesy of https://www.countryflags.io/ */}\n            <Card.Img\n              variant=\"top\"\n              src={\n                \"https://www.countryflags.io/\" +\n                this.props.item.iso2 +\n                \"/flat/32.png\"\n              }\n              bsPrefix=\"card-icon\"\n            />\n          </Card.Header>\n          <Card.Img src={this.props.item.image} alt=\"Card image\" />\n          <Card.ImgOverlay>\n            <Card.Body>\n              <Card.Title className=\"destination-card-title\">{this.props.item.name}</Card.Title>\n            </Card.Body>\n          </Card.ImgOverlay>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default DestinationCard;\n","import React from \"react\";\nimport { Form, FormControl } from \"react-bootstrap\";\n//import cities from \"../../../data/worldcities.json\";\nimport countryMap from \"../../../data/countries.json\";\nimport cities from \"../../../data/capitalcities.json\";\nimport countries from \"../../../data/countries.geo.json\";\nimport beaches from \"../../../data/beaches.json\";\nimport \"./Search.css\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  search() {\n    let matchedCities = [];\n    let matchedCountries = [];\n    let matchedBeaches = [];\n\n    if (this.state.value.length > 2) {\n      cities\n        .filter(\n          (city) =>\n            city.city.toLowerCase().includes(this.state.value.toLowerCase())\n        )\n        .forEach((searchResult) => {\n          let entry = {\n            id: searchResult.id,\n            type: \"City\",\n            name: searchResult.city,\n            city: searchResult.city,\n            description: searchResult.country,\n            country: searchResult.country,\n            image: `https://source.unsplash.com/400x225/?${searchResult.city}`,\n            iso2: searchResult.iso2,\n            iso3: searchResult.iso3,\n            location: {\n              latitude: searchResult.lat,\n              longitude: searchResult.lng\n            }\n          }\n          matchedCities.push(entry);\n\n          if(searchResult.landmarks && searchResult.landmarks.length > 0) {\n            searchResult.landmarks.forEach(landmark => {\n              entry = {\n                id: searchResult.id,\n                type: \"Landmark\",\n                name: landmark.name,\n                city: searchResult.city,\n                description: landmark.name,\n                country: searchResult.country,\n                image: `https://source.unsplash.com/400x225/?${landmark.name}`,\n                iso2: searchResult.iso2,\n                iso3: searchResult.iso3,\n                location: {\n                  latitude: landmark.lat,\n                  longitude: landmark.lng\n                }\n              }\n              matchedCities.push(entry);\n            })\n          }\n            \n          return matchedCities;\n        });\n      countries.features\n        .filter((country) =>\n          country.properties.name\n            .toLowerCase()\n            .includes(this.state.value.toLowerCase())\n            && cities.filter(x => x.iso3 === country.id).length > 0\n            && matchedCities.filter(x => x.iso3 === country.id).length < 1\n        )\n        .forEach((searchResult) => {\n          let entry = {\n            id: searchResult.id,\n            type: \"Country\",\n            name: searchResult.properties.name,\n            city: searchResult.properties.name,\n            description: \"\",\n            country: \"\",\n            image: `https://source.unsplash.com/400x225/?${searchResult.properties.name}`,\n            iso2: countryMap.filter(x => x.iso3 === searchResult.id)[0].iso2,\n            iso3: searchResult.id,\n            location: {\n              latitude: cities.filter(x => x.iso3 === searchResult.id)[0].lat,\n              longitude: cities.filter(x => x.iso3 === searchResult.id)[0].lng,\n            }\n          }\n          matchedCountries.push(entry);\n        });\n\n      beaches\n        .filter(beach =>\n          this.state.value.toLowerCase().includes(\"beach\")\n          || beach.name.toLowerCase().includes(this.state.value.toLowerCase())\n          || (matchedCities.some(city => city.city === beach.city)\n          || matchedCountries.some(country => country.id === beach.id))\n        )\n        .forEach(beach => {\n          let entry = {\n            id: beach.id,\n            type: \"Beach\",\n            name: beach.name,\n            city: countryMap.filter(x => x.iso3 === beach.id)[0].iso2,\n            description: beach.name,\n            country: countryMap.filter(x => x.iso3 === beach.id)[0].name,\n            image: `https://source.unsplash.com/1600x900/?${beach.name}`,\n            iso2: countryMap.filter(x => x.iso3 === beach.id)[0].iso2,\n            iso3: beach.id,\n            location: {\n              latitude: beach.lat,\n              longitude: beach.lng\n            }\n          }\n          matchedBeaches.push(entry);\n        })\n    }\n    this.props.onSearch([...matchedCities,...matchedBeaches, ...matchedCountries]);\n  }\n\n  render() {\n    return (\n      <Form inline onSubmit={null}>\n        <FormControl\n          value={this.state.value}\n          onChange={this.handleChange}\n          onKeyUp={this.search}\n          type=\"text\"\n          placeholder=\"Search...\"\n          className=\"mr-sm-2\"\n          onSubmit={null}\n        />\n        {/* <Button variant=\"outline-success\">Search</Button> */}\n      </Form>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport { Nav, Button } from \"react-bootstrap\";\nimport DestinationCard from \"./destinationCard/DestinationCard\";\nimport Search from \"./search/Search\";\n\nimport \"./SideBar.css\";\n\nclass SideBar extends React.Component {\n  \n  handleMouseEnter = (item) => {\n    this.props.setSelectedItem(item);\n    this.props.onClearPopup(); // Close any open popup\n    this.props.flyTo(item)\n  }\n\n  handleCardClick(item) {\n    this.props.flyTo(item);\n  }\n\n  openNav() {\n    document.getElementById(\"nav\").style.width = \"23vw\";\n  }\n\n  closeNav() {\n    document.getElementById(\"nav\").style.width = \"0\";\n  }\n\n  render() {\n    return (\n      <>\n        <Button\n          className=\"openbtn\"\n          variant=\"dark\"\n          onClick={() => {\n            this.openNav();\n          }}\n        >\n          ☰\n        </Button>\n        <Nav\n          id=\"nav\"\n          className=\"col-md-12 d-none d-md-block bg-dark sidebar\"\n        >\n          <Nav.Item>\n            <Search onSearch={this.props.handleMatchedCities} />\n            <Button variant=\"dark\" className=\"closebtn\"\n              onClick={() => this.closeNav()}\n            >\n            &times;\n          </Button>\n          </Nav.Item>\n\n          {this.props.matchedCities.map((item, index) => {\n            return (\n              <Nav.Item key={`${item.id}-${index}`}>\n                <DestinationCard\n                  key={item.id}\n                  item={item}\n                  handleCardClick={this.handleCardClick}\n                  handleMouseEnter={this.handleMouseEnter}\n                />\n              </Nav.Item>\n            );\n          })}\n        </Nav>\n      </>\n    );\n  }\n}\n\nexport default SideBar;\n","import React from \"react\";\nimport { Cartesian3, Color } from \"cesium\";\nimport { Entity, PolygonGraphics } from \"resium\";\nimport countries from \"../../../data/countries.geo.json\";\n\nclass PolygonCountries extends React.Component {\n  constructor(props) {\n    super(props);\n    this.randomColor = this.randomColor.bind(this);\n  }\n\n  randomColor() {\n    //return new Color(Math.random(), Math.random(), Math.random(), 0.5);\n    return new Color(1.0, 1.0, 0.0, 0.0);\n  }\n  render() {\n    return (\n      <>\n        {countries.features.map((country, i) => {\n          if (country.geometry.type === \"Polygon\") {\n            var countryCoordinates = [].concat.apply(\n              [],\n              country.geometry.coordinates[0]\n            );\n            return (\n              <Entity\n                key={\"E\" + country.id + i.toString()}\n                name={country.id}\n                description={country.properties.name}\n              >\n                <PolygonGraphics\n                  key={country.id + i.toString()}\n                  hierarchy={Cartesian3.fromDegreesArray(countryCoordinates)}\n                  fill={true}\n                  material={this.randomColor()}\n                />\n              </Entity>\n            );\n          } else {\n            return country.geometry.coordinates.map((polygon, j) => {\n              var polyCoords = [].concat.apply([], polygon[0]);\n              return (\n                <Entity\n                  key={\"E\" + country.id + i.toString() + \"-\" + j.toString()}\n                  name={country.id}\n                  description={country.properties.name}\n                >\n                  <PolygonGraphics\n                    key={country.id + i.toString() + \"-\" + j.toString()}\n                    hierarchy={Cartesian3.fromDegreesArray(polyCoords)}\n                    fill={true}\n                    material={this.randomColor()}\n                  />\n                </Entity>\n              );\n            });\n          }\n        })}\n      </>\n    );\n  }\n}\n\nexport default PolygonCountries;\n","export default __webpack_public_path__ + \"static/media/marker.87dd02dd.png\";","export default __webpack_public_path__ + \"static/media/otbMarker.1e9ff67d.png\";","export default __webpack_public_path__ + \"static/media/greenMarker.a8cbc8e7.png\";","export default __webpack_public_path__ + \"static/media/blueMarker.0c34039e.png\";","export default __webpack_public_path__ + \"static/media/YouAreHere.6fce043f.png\";","import React, { createRef } from \"react\";\nimport { Cartesian3, LabelStyle, Cartesian2, VerticalOrigin } from \"cesium\";\nimport { Viewer, Entity } from \"resium\";\nimport Info from \"../info/Info\";\nimport Plane from \"../plane/Plane\";\nimport CesiumContext from \"../../CesiumContext\";\nimport SideBar from \"../nav/SideBar\";\nimport PolygonCountries from \"./polygonCountries/PolygonCountries\";\nimport YellowMarker from \"../../images/marker.png\";\nimport OTBMarker from \"../../images/otbMarker.png\";\nimport GreenMarker from \"../../images/greenMarker.png\";\nimport BlueMarker from \"../../images/blueMarker.png\";\n\nimport Arrow from \"../../images/YouAreHere.png\";\n\nconst COUNTRY_ZOOM = 5000000;\nconst CITY_ZOOM = 15000;\nconst dummyCredit = document.createElement(\"div\");\n\nclass Global extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = createRef();\n    this.infoRef = createRef();\n    this.selected = [];\n    this.selected[\"GBR\"] = false;\n    this.state = {\n      matchedCities: [],\n      cardPosition: {\n        x: 0,\n        y: 0,\n      },\n      selectedItem: null,\n      userLat: 0,\n      userLng: 0,\n      monsterLat: 47.751076,\n      monsterLng: -120.740135,\n    };\n\n    this.handleUserLocation = this.handleUserLocation.bind(this);\n    this.handleMatchedCities = this.handleMatchedCities.bind(this);\n    this.flyToDestination = this.flyToDestination.bind(this);\n    this.isPopoverOpen = this.isPopoverOpen.bind(this);\n    this.onEntityClick = this.onEntityClick.bind(this);\n    this.onClearPopup = this.onClearPopup.bind(this);\n    this.setSelectedItem = this.setSelectedItem.bind(this);\n  }\n\n  setSelectedItem(item) {\n    this.setState({ selectedItem: item });\n  }\n  handleMatchedCities(matches) {\n    this.setState({ matchedCities: matches });\n  }\n\n  handleUserLocation(latitude, longitude) {\n    this.setState({\n      userLat: latitude,\n      userLng: longitude,\n    });\n  }\n\n  flyToDestination(destination) {\n    let altitude = destination.type === \"Country\" ? COUNTRY_ZOOM : CITY_ZOOM;\n    this.ref.current.cesiumElement.camera.flyTo({\n      destination: Cartesian3.fromDegrees(\n        destination.location.longitude,\n        destination.location.latitude,\n        altitude\n      ),\n      complete: () => this.defaultPopUp(destination),\n    });\n\n    this.setState({\n      cardPosition: { x: 0, y: 0 },\n    });\n  }\n\n  componentDidMount() {\n    if (this.ref.current && this.ref.current.cesiumElement) {\n      this.context.setInstance(this.ref.current.cesiumElement);\n    }\n\n    var s = 0;\n    this.ref.current.cesiumElement.clock.onTick.addEventListener(() => {\n      if (this.props.konami && s % 30 === 0) {\n        this.setState((prevState, props) => {\n          return {\n            monsterLng: prevState.monsterLng + 0.1,\n          };\n        });\n      }\n      s++;\n    });\n    let latitude = 0;\n    let longitude = 0;\n    let self = this;\n    navigator.geolocation.getCurrentPosition(function (position) {\n      latitude = position.coords.latitude;\n      longitude = position.coords.longitude;\n\n      self.handleUserLocation(latitude, longitude);\n    });\n  }\n\n  defaultPopUp = (destination) => {\n    let screenCoords = this.getScreenCentre();\n    this.onEntityClick(screenCoords, destination);\n  };\n\n  getScreenCentre = () => {\n    return {\n      position: {\n        x: this.ref.current.cesiumElement.container.clientWidth / 2,\n        y: this.ref.current.cesiumElement.container.clientHeight / 2,\n      },\n    };\n  };\n\n  onEntityClick = ({ position: { x, y } }, item) => {\n    this.setState({\n      cardPosition: { x, y },\n      selectedItem: item,\n    });\n  };\n\n  konamiCodeActivated = () => this.props.konami;\n\n  isPopoverOpen = () =>\n    this.state.cardPosition.x > 0 && this.state.cardPosition.y > 0;\n\n  onClearPopup = () => {\n    this.setState({\n      cardPosition: { x: 0, y: 0 },\n      selectedItem: null,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <SideBar\n          {...this.state}\n          flyTo={this.flyToDestination}\n          handleMatchedCities={this.handleMatchedCities}\n          onClearPopup={this.onClearPopup}\n          setSelectedItem={this.setSelectedItem}\n        />\n        <Viewer\n          ref={this.ref}\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n          }}\n          full\n          creditContainer={dummyCredit}\n          timeline={false}\n          shouldAnimate={true}\n          animation={false}\n          fullscreenButton={false}\n          sceneModePicker={false}\n          baseLayerPicker={true}\n          projectionPicker={false}\n          navigationHelpButton={false}\n          homeButton={false}\n          geocoder={false}\n          infoBox={false}\n          selectionIndicator={false}\n          onMouseDown={this.onClearPopup}\n        >\n          <PolygonCountries />\n          {this.state.matchedCities.map((entry) => {\n            let icon =\n              entry.type === \"Landmark\"\n                ? BlueMarker\n                : entry.type === \"Country\"\n                ? GreenMarker\n                : entry.type === \"City\"\n                ? YellowMarker\n                : OTBMarker;\n\n            let height = entry.type === \"Beach\" ? 32 : 44;\n            return (\n              <>\n                <Entity\n                  onClick={(e) => {\n                    this.onEntityClick(e, entry);\n                  }}\n                  name={entry.city}\n                  billboard={{\n                    image: icon,\n                    width: 32,\n                    height: height,\n                  }}\n                  label={{\n                    text: `${entry.name}`,\n                    font: \"36pt\",\n                    style: LabelStyle.FILL_AND_OUTLINE,\n                    outlineWidth: 3,\n                    verticalOrigin: VerticalOrigin.BOTTOM,\n                    pixelOffset: new Cartesian2(0, -26),\n                  }}\n                  position={Cartesian3.fromDegrees(\n                    entry.location.longitude,\n                    entry.location.latitude,\n                    0\n                  )}\n                />\n              </>\n            );\n          })}\n          <Entity\n            name={\"Me\"}\n            billboard={{\n              image: Arrow,\n              width: 44,\n              height: 150,\n            }}\n            position={Cartesian3.fromDegrees(\n              this.state.userLng,\n              this.state.userLat,\n              0\n            )}\n          />\n\n          {this.konamiCodeActivated() && (\n            <Plane\n              longitude={this.state.monsterLng}\n              latitude={this.state.monsterLat}\n              elevation={0}\n            />\n          )}\n        </Viewer>\n\n        {this.isPopoverOpen() && (\n          <Info\n            item={this.state.selectedItem}\n            x={this.state.cardPosition.x}\n            y={this.state.cardPosition.y}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nGlobal.contextType = CesiumContext;\n\nexport default Global;\n","export default __webpack_public_path__ + \"static/media/otb.c5562c17.png\";","import React from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport \"./OtbImage.css\";\nimport logo from \"../../images/otb.png\"\n\nfunction OtbImage() {\n  return  <a href=\"https://www.onthebeach.co.uk\"><Image src={logo} id={\"otbImage\"} /> </a>\n}\n\nexport default OtbImage;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport { useInputEvent } from \"./useInputEvent\";\n\nconst konamiCode = [ \"ArrowUp\", \"ArrowUp\", \"ArrowDown\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\", \"ArrowLeft\", \"ArrowRight\", \"KeyB\", \"KeyA\",];\n\nexport const useKonamiCode = () => {\n  const [count, setCount] = useState(0);\n  const [success, setSuccess] = useState(false);\n  const key = useInputEvent();\n  \n  useEffect(() => {\n    if (key == null) return;\n    if (key !== konamiCode[count]) {\n      setCount(0);\n      return;\n    }\n  \n    setCount((state) => state + 1);\n    if (count + 1 === konamiCode.length) {\n      setSuccess(true);\n    }\n  }, [key]);\n  \n  return success;\n};\n\n//https://gist.github.com/joelnet/b5dde8b4ac76c77d741235f15a94937d#file-usekonamicode-js","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Globe from \"./components/globe/Globe.js\";\nimport OtbImage from \"./components/otbimage/OtbImage\";\nimport CesiumContext, { state } from \"./CesiumContext\";\nimport { useKonamiCode } from \"./useKonamiCode\";\n\nfunction App() {\n  const konami = useKonamiCode();\n\n  return (\n    <div className=\"App\">\n      <CesiumContext.Provider value={state}>\n        <Globe konami={konami} />\n        <OtbImage />\n      </CesiumContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}