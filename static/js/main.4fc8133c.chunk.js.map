{"version":3,"sources":["../external \"Cesium\"","components/info-carousel/InfoCarousel.js","components/info/Info.js","CesiumContext.js","components/nav/destinationCard/DestinationCard.js","components/nav/search/Search.js","components/nav/SideBar.js","components/globe/polygonCountries/PolygonCountries.js","images/marker.png","components/globe/Globe.js","images/otb.png","components/otbimage/OtbImage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Cesium","InfoCarousel","title","image","description","rating","weather","currency","languages","Carousel","interval","indicators","Item","Caption","className","src","alt","Array","map","s","i","class","WeatherWidget","w","name","season","celcius","InfoWidget","atHomeCurrency","filter","c","atHome","otherCurrencies","prepend","icon","amount","l","Info","x","y","style","top","left","state","viewer","setInstance","ref","CesiumContext","React","createContext","DestinationCard","Card","bg","text","onMouseEnter","props","handleCardClick","item","Img","variant","this","iso2","bsPrefix","Math","random","Body","Title","city","Text","country","id","Component","Search","value","handleChange","bind","search","event","setState","target","matches","length","cities","entry","toLowerCase","includes","push","onSearch","Form","inline","onSubmit","FormControl","onChange","onKeyUp","type","placeholder","SideBar","flyTo","latitude","lat","longitude","lng","document","getElementById","width","Button","onClick","openNav","Nav","handleMatchedCities","matchedCities","closeNav","PolygonCountries","randomColor","Color","countries","features","geometry","countryCoordinates","concat","apply","coordinates","properties","hierarchy","Cartesian3","fromDegreesArray","fill","material","toString","polygon","j","polyCoords","dummyCredit","createElement","Global","onEntityClick","position","cardPosition","isPopoverOpen","onViewerMove","createRef","infoRef","selected","flyToDestination","destination","current","cesiumElement","camera","fromDegrees","context","right","bottom","full","creditContainer","timeline","animation","fullscreenButton","sceneModePicker","baseLayerPicker","projectionPicker","navigationHelpButton","homeButton","geocoder","infoBox","selectionIndicator","onMouseDown","billboard","Marker","height","label","iso3","font","LabelStyle","FILL_AND_OUTLINE","outlineWidth","verticalOrigin","VerticalOrigin","BOTTOM","pixelOffset","Cartesian2","contextType","OtbImage","href","Image","logo","App","Provider","Globe","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4fc8133c.chunk.js","sourcesContent":["module.exports = Cesium;","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\nimport \"./InfoCarousel.css\";\n\nexport const InfoCarousel = ({ title, image, description, rating, weather, currency, languages }) => (\n    <Carousel interval={null} indicators>\n        <Carousel.Item>\n            <Carousel.Caption>\n                <h1>{title}</h1>\n            </Carousel.Caption>\n\n            <img\n                className=\"d-block\"\n                src={image}\n                alt={title}\n            />\n        </Carousel.Item>\n\n        <Carousel.Item>\n            <Carousel.Caption>\n                <h1>{title}</h1>\n                <div className=\"rating-container\">\n                    {\n                        [...Array(rating)].map((s, i) => (\n                            <span key={i}>&#9733;</span>\n                        ))\n                    }\n                </div>\n\n                <div class=\"description\">{description}</div>\n            </Carousel.Caption>\n\n            <div\n                className=\"opacity-container\"\n            />\n\n            <img\n                className=\"d-block\"\n                src={image}\n                alt={title}\n            />\n        </Carousel.Item>\n\n        <Carousel.Item>\n            <WeatherWidget title={title} weather={weather} />\n\n            <div\n                className=\"opacity-container\"\n            />\n\n            <img\n                className=\"d-block\"\n                src={image}\n                alt={title}\n            />\n        </Carousel.Item>\n\n        <Carousel.Item>\n            <InfoWidget title={title} currency={currency} languages={languages} />\n\n            <div\n                className=\"opacity-container\"\n            />\n\n            <img\n                className=\"d-block\"\n                src={image}\n                alt={title}\n            />\n        </Carousel.Item>\n    </Carousel>\n);\n\n\nconst WeatherWidget = ({ title, weather }) => {\n    const getWeatherIcon = (season) => {\n        if (season === \"Winter\") return (<i class=\"fas fa-snowflake\"></i>);\n        if (season === \"Summer\") return (<i class=\"fas fa-sun\"></i>);\n        if (season === \"Autumn\") return (<i class=\"fas fa-cloud-sun-rain\"></i>)\n        return (<i class=\"fas fa-cloud-sun\"></i>);\n    }\n\n    return (\n        <Carousel.Caption>\n            <h1>{title}</h1>\n            <div class=\"weather-container\">\n                {\n                    weather.map((w) => (\n                        <div className=\"weather-item\">\n                            <h3>{w.name}</h3>\n                            {\n                                getWeatherIcon(w.name)\n                            }\n                            <h4>{`${w.celcius}'C`}</h4>\n                        </div>\n                    ))\n                }\n            </div>\n\n            <div class=\"weather-container\">\n                        <div className=\"weather-item\">\n                            <h3>From MAN: </h3>\n                            <i class=\"fas fa-plane\"></i>\n                            <h4>02:45hrs</h4>\n                        </div>\n                        <div className=\"weather-item\">\n                            <h3>From LPL: </h3>\n                            <i class=\"fas fa-plane\"></i>\n                            <h4>02:57hrs</h4>\n                        </div>\n                        <div className=\"weather-item\">\n                            <h3>From BHX: </h3>\n                            <i class=\"fas fa-plane\"></i>\n                            <h4>02:32hrs</h4>\n                        </div>\n            </div>\n        </Carousel.Caption>\n    )\n}\n\nconst InfoWidget = ({ title, currency, languages }) => {\n    const atHomeCurrency = currency.filter(c => c.atHome === true);\n    const otherCurrencies = currency.filter(c => c.atHome === false);\n\n    return (\n        <Carousel.Caption>\n            <>\n            <h1>{title}</h1>\n            <div class=\"currency-container\">\n                <h4>Your Local Currency:</h4>\n                {\n                    atHomeCurrency.map((c) => (\n                        <div className=\"currency-item-athome\">\n                            { c.prepend &&\n                                <span>{`${c.icon}${c.amount}`}</span>\n                            }\n\n                            { !c.prepend &&\n                                <span>{`${c.amount}${c.icon}`}</span>\n                            }\n                        </div>\n                    ))\n                }\n\n                <h4>Your Destination Currency Rate:</h4>\n                {\n                    otherCurrencies.map((c) => (\n                        <div className=\"currency-item\">\n                            { c.prepend &&\n                                <span>{`${c.icon}${c.amount}`}</span>\n                            }\n\n                            { !c.prepend &&\n                                <span>{`${c.amount}${c.icon}`}</span>\n                            }\n                        </div>\n                    ))\n                }\n            </div>\n\n            <div class=\"language-container\">\n                <h4>Your Destination Languages:</h4>\n                {\n                    languages.map((l, i) => (\n                        <span>\n                            {i > 0 && \", \"}\n                            {`${l}`}\n                        </span>\n                    ))\n                }\n            </div>\n            </>\n        </Carousel.Caption>\n    )\n}\n\nexport default InfoCarousel;","import React from \"react\";\nimport { InfoCarousel } from \"../info-carousel/InfoCarousel\";\nimport \"./Info.css\";\n\nexport const Info = ({ x, y }) => {\n  const destination =\n  {\n    title: \"Sunny Manchester\",\n    image: \"https://www.thetreecenter.com/c/uploads/palm-trees-beach-scaled-2048x1146.jpg\",\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam eget diam ut purus venenatis molestie. Sed mollis dui et arcu blandit tincidunt. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam eget diam ut purus venenatis molestie.\",\n    rating: 2,\n    weather: [\n      { name: \"Spring\", celcius: 11 },\n      { name: \"Summer\", celcius: 20 },\n      { name: \"Autumn\", celcius: 9 },\n      { name: \"Winter\", celcius: 4 }\n    ],\n    currency: [\n      { icon: \"£\", amount: 1, atHome: true, prepend: true },\n      { icon: \"¥\", amount: 1.5, atHome: false, prepend: false }\n    ],\n    languages: [\n      \"French\", \"Spanish\"\n    ]\n  };\n\n  return (\n    <div className=\"infoContainer\" style={{ top: `${y}px`, left: `${x}px` }}>\n      <div className=\"infoCarouselContainer\">\n        <InfoCarousel {...destination} />\n      </div>\n    </div>\n  );\n};\nexport default Info;","import React from \"react\";\nconst CesiumContext = React.createContext();\nexport const state = {\n  viewer: \"\",\n  setInstance: (ref) => {\n    state.viewer = ref;\n  }\n};\nexport default CesiumContext;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport \"./DestinationCard.css\";\n\nclass DestinationCard extends React.Component {\n  render() {\n    return (\n      <Card\n        key={this.props.item.id}\n        bg=\"light\"\n        text=\"black\"\n        onMouseEnter={() => {\n          this.props.handleCardClick(this.props.item);\n        }}\n      >\n        {/* Curtesy of https://www.countryflags.io/ */}\n        <Card.Img variant=\"top\" src={\"https://www.countryflags.io/\" + this.props.item.iso2 + \"/flat/64.png\"} bsPrefix=\"card-icon\"/>\n        <Card.Img variant=\"top\" src={\"https://picsum.photos/200/100?\" + Math.random()} />\n        <Card.Body>\n          <Card.Title>{this.props.item.city}</Card.Title>\n          <Card.Text>{this.props.item.country}</Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default DestinationCard;\n","import React from \"react\";\nimport { Form, FormControl } from \"react-bootstrap\";\n//import cities from \"../../../data/worldcities.json\";\nimport cities from \"../../../data/capitalcities.json\";\nimport \"./Search.css\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  search() {\n    const matches = [];\n    if (this.state.value.length > -1) {\n      cities\n        .filter(\n          (entry) =>\n            entry.city.toLowerCase().includes(this.state.value.toLowerCase()) ||\n            entry.country.toLowerCase().includes(this.state.value.toLowerCase())\n        )\n        .map(country => {\n          return matches.push(country);\n        });\n    }\n    this.props.onSearch(matches);\n  }\n\n  render() {\n    return (\n      <Form inline onSubmit={null}>\n        <FormControl\n          value={this.state.value}\n          onChange={this.handleChange}\n          onKeyUp={this.search}\n          type=\"text\"\n          placeholder=\"Search...\"\n          className=\"mr-sm-2\"\n        />\n        {/* <Button variant=\"outline-success\">Search</Button> */}\n      </Form>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport { Nav, Button } from \"react-bootstrap\";\nimport DestinationCard from \"./destinationCard/DestinationCard\";\nimport Search from \"./search/Search\";\n\nimport \"./SideBar.css\";\n\nclass SideBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCardClick = this.handleCardClick.bind(this);\n  }\n\n  handleCardClick(item) {\n    this.props.flyTo({ latitude: item.lat, longitude: item.lng });\n  }\n\n  openNav() {\n    document.getElementById(\"nav\").style.width = \"20vw\";\n  }\n\n  closeNav() {\n    document.getElementById(\"nav\").style.width = \"0\";\n  }\n\n  render() {\n    return (\n      <>\n        <Button\n          className=\"openbtn\"\n          variant=\"dark\"\n          onClick={() => {\n            this.openNav();\n          }}\n        >\n          ☰\n        </Button>\n        <Nav\n          id=\"nav\"\n          className=\"col-md-12 d-none d-md-block bg-dark sidebar\"\n        >\n          <Nav.Item>\n            <Search onSearch={this.props.handleMatchedCities} />\n          </Nav.Item>\n\n          {this.props.matchedCities.map((item) => {\n            return (\n              <Nav.Item key={item.id}>\n                <DestinationCard\n                  key={item.id}\n                  item={item}\n                  handleCardClick={this.handleCardClick}\n                />\n              </Nav.Item>\n            );\n          })}\n          <Button\n            variant=\"dark\"\n            className=\"closebtn\"\n            onClick={() => {\n              this.closeNav();\n            }}\n          >\n            &times;\n          </Button>\n        </Nav>\n      </>\n    );\n  }\n}\n\nexport default SideBar;\n","import React from \"react\";\nimport { Cartesian3, Color } from \"cesium\";\nimport { Entity, PolygonGraphics } from \"resium\";\nimport countries from \"../../../data/countries.geo.json\";\n\nclass PolygonCountries extends React.Component {\n  constructor(props) {\n    super(props);\n    this.randomColor = this.randomColor.bind(this);\n  }\n\n  randomColor() {\n    //return new Color(Math.random(), Math.random(), Math.random(), 0.5);\n    return new Color(1.0, 1.0, 0.0, 0.0);\n  }\n  render() {\n    return (\n      <>\n        {countries.features.map((country, i) => {\n          if (country.geometry.type === \"Polygon\") {\n            var countryCoordinates = [].concat.apply(\n              [],\n              country.geometry.coordinates[0]\n            );\n            return (\n              <Entity\n                key={\"E\" + country.id + i.toString()}\n                name={country.id}\n                description={country.properties.name}\n              >\n                <PolygonGraphics\n                  key={country.id + i.toString()}\n                  hierarchy={Cartesian3.fromDegreesArray(countryCoordinates)}\n                  fill={true}\n                  material={this.randomColor()}\n                />\n              </Entity>\n            );\n          } else {\n            return country.geometry.coordinates.map((polygon, j) => {\n              var polyCoords = [].concat.apply([], polygon[0]);\n              return (\n                <Entity\n                  key={\"E\" + country.id + i.toString() + \"-\" + j.toString()}\n                  name={country.id}\n                  description={country.properties.name}\n                >\n                  <PolygonGraphics\n                    key={country.id + i.toString() + \"-\" + j.toString()}\n                    hierarchy={Cartesian3.fromDegreesArray(polyCoords)}\n                    fill={true}\n                    material={this.randomColor()}\n                  />\n                </Entity>\n              );\n            });\n          }\n        })}\n      </>\n    );\n  }\n}\n\nexport default PolygonCountries;\n","export default __webpack_public_path__ + \"static/media/marker.87dd02dd.png\";","import React, { createRef } from \"react\";\nimport {\n  Cartesian3,\n  LabelStyle,\n  Cartesian2,\n  VerticalOrigin\n} from \"cesium\";\nimport { Viewer, Entity } from \"resium\";\n// import Plane from \"../plane/Plane\";\nimport Info from \"../info/Info\"\nimport CesiumContext from \"../../CesiumContext\";\nimport SideBar from \"../nav/SideBar\";\nimport PolygonCountries from \"./polygonCountries/PolygonCountries\";\nimport Marker from \"../../images/marker.png\";\n// import countries from \"../../data/countries.geo.json\";\n\nconst dummyCredit = document.createElement(\"div\");\n\n// const screenClickToCartesian3 = (current, x, y) => {\n//   const scene = current?.cesiumElement?.scene;\n//   if (!scene) return;\n//   const ellipsoid = scene.globe.ellipsoid;\n//   return scene.camera.pickEllipsoid(new Cartesian2(x, y), ellipsoid);\n// }\n\nclass Global extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = createRef();\n    this.infoRef = createRef();\n    this.selected = [];\n    this.selected[\"GBR\"] = false;\n    this.state = {\n      matchedCities: [],\n      cardPosition: {\n        x: 0,\n        y: 0\n      }\n    };\n\n    this.handleMatchedCities = this.handleMatchedCities.bind(this);\n    this.flyToDestination = this.flyToDestination.bind(this);\n    this.isPopoverOpen = this.isPopoverOpen.bind(this);\n    this.onEntityClick = this.onEntityClick.bind(this);\n    this.onViewerMove = this.onViewerMove.bind(this);\n  }\n\n  handleMatchedCities(matches) {\n    this.setState({ matchedCities: matches });\n  }\n\n  flyToDestination(destination) {\n    this.ref.current.cesiumElement.camera.flyTo({\n      destination: Cartesian3.fromDegrees(\n        destination.longitude,\n        destination.latitude,\n        5000000\n      ),\n    });\n  }\n\n  componentDidMount() {\n    if (this.ref.current && this.ref.current.cesiumElement) {\n      this.context.setInstance(this.ref.current.cesiumElement);\n    }\n  }\n\n  onEntityClick = ({ position: { x, y }}) => {\n    // const clickAsCartesian3 = screenClickToCartesian3(this.ref.current, x, y);\n\n    this.setState({\n      cardPosition: { x, y }\n    })\n  }\n\n  isPopoverOpen = () => this.state.cardPosition.x > 0 && this.state.cardPosition.y > 0;\n\n  onViewerMove = () => {\n    this.setState({\n      cardPosition: { x: 0, y: 0 }\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <SideBar\n          {...this.state}\n          flyTo={this.flyToDestination}\n          handleMatchedCities={this.handleMatchedCities}\n        />\n        <Viewer\n          ref={this.ref}\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n          }}\n          full\n          creditContainer={dummyCredit}\n          timeline={false}\n          animation={false}\n          fullscreenButton={false}\n          sceneModePicker={false}\n          baseLayerPicker={true}\n          projectionPicker={false}\n          navigationHelpButton={false}\n          homeButton={false}\n          geocoder={false}\n          infoBox={false}\n          selectionIndicator={false}\n          onMouseDown={this.onViewerMove}\n        >\n          <PolygonCountries />\n\n          {this.state.matchedCities.map(entry => {\n            return (\n              <Entity\n                onClick={this.onEntityClick}\n                name={entry.city}\n                billboard={{\n                  image: Marker,\n                  width: 24,\n                  height: 36,\n                }}\n                label={{\n                  text: `${entry.city}, ${entry.iso3}`,\n                  font: \"36pt\",\n                  style: LabelStyle.FILL_AND_OUTLINE,\n                  outlineWidth: 3,\n                  verticalOrigin: VerticalOrigin.BOTTOM,\n                  pixelOffset: new Cartesian2(0, -20),\n                }}\n                position={Cartesian3.fromDegrees(entry.lng, entry.lat, 0)}\n              >\n              </Entity>\n            )\n          })}\n          {/* <Plane\n            longitude={-0.124625}\n            latitude={51.510357}\n            elevation={100000}\n          /> */}\n        </Viewer>\n        {\n          this.isPopoverOpen() &&\n            <Info x={this.state.cardPosition.x} y={this.state.cardPosition.y} />\n        }\n      </>\n    );\n  }\n}\nGlobal.contextType = CesiumContext;\nexport default Global;\n","export default __webpack_public_path__ + \"static/media/otb.c5562c17.png\";","import React from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport \"./OtbImage.css\";\nimport logo from \"../../images/otb.png\"\n\nfunction OtbImage() {\n  return  <a href=\"https://www.onthebeach.co.uk\"><Image src={logo} id={\"otbImage\"} /> </a>\n}\n\nexport default OtbImage;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Globe from \"./components/globe/Globe.js\";\nimport OtbImage from \"./components/otbimage/OtbImage\";\nimport CesiumContext, { state } from \"./CesiumContext\";\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <CesiumContext.Provider value={state}>\n        <Globe />\n        <OtbImage />\n      </CesiumContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}